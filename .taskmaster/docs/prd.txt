# Supabase Storage Integration for Design Images

## Overview
Implement Supabase Storage integration to permanently store generated design images from DALL-E. This will replace the current system that relies on temporary OpenAI URLs.

## Requirements

### Storage Configuration
- Create a new Supabase Storage bucket specifically for design images
- Configure appropriate bucket policies and permissions
- Set up CORS policies if needed

### Image Storage Implementation
- Create helper functions to upload images to Supabase Storage
- Download DALL-E generated images before the temporary URL expires
- Upload downloaded images to Supabase Storage bucket
- Generate and store permanent URLs for the images

### Database Integration
- Create or modify custom_design table to store Supabase Storage URLs
- Add necessary columns for tracking storage metadata
- Ensure proper indexing and constraints

### Error Handling
- Handle image upload failures gracefully
- Implement retry mechanisms for failed uploads
- Provide clear error messages to users

### Performance & Security
- Implement proper file size limits
- Add file type validation
- Set up appropriate bucket security rules
- Optimize image storage for performance

## Technical Specifications

### Storage Bucket Configuration
- Bucket name: "design-images"
- Public access: Controlled via bucket policies
- File types: PNG, JPEG
- Max file size: 10MB

### Database Schema Updates
```sql
-- Add or modify columns in custom_design table
ALTER TABLE custom_design
ADD COLUMN IF NOT EXISTS storage_url TEXT,
ADD COLUMN IF NOT EXISTS storage_path TEXT,
ADD COLUMN IF NOT EXISTS original_url TEXT;
```

### Implementation Flow
1. Generate image with DALL-E
2. Download image from temporary URL
3. Upload to Supabase Storage
4. Update database with permanent URL
5. Clean up temporary files

## Success Criteria
- All new designs are automatically stored in Supabase Storage
- Images remain accessible indefinitely
- No broken image links due to URL expiration
- Successful error handling and recovery
- Minimal impact on application performance 